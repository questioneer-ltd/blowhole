# Stubs for docker.api.image (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..constants import DEFAULT_DATA_CHUNK_SIZE
from typing import Any, Optional

log: Any

class ImageApiMixin:
    def get_image(self, image: Any, chunk_size: Any = ...): ...
    def history(self, image: Any): ...
    def images(self, name: Optional[Any] = ..., quiet: bool = ..., all: bool = ..., filters: Optional[Any] = ...): ...
    def import_image(self, src: Optional[Any] = ..., repository: Optional[Any] = ..., tag: Optional[Any] = ..., image: Optional[Any] = ..., changes: Optional[Any] = ..., stream_src: bool = ...): ...
    def import_image_from_data(self, data: Any, repository: Optional[Any] = ..., tag: Optional[Any] = ..., changes: Optional[Any] = ...): ...
    def import_image_from_file(self, filename: Any, repository: Optional[Any] = ..., tag: Optional[Any] = ..., changes: Optional[Any] = ...): ...
    def import_image_from_stream(self, stream: Any, repository: Optional[Any] = ..., tag: Optional[Any] = ..., changes: Optional[Any] = ...): ...
    def import_image_from_url(self, url: Any, repository: Optional[Any] = ..., tag: Optional[Any] = ..., changes: Optional[Any] = ...): ...
    def import_image_from_image(self, image: Any, repository: Optional[Any] = ..., tag: Optional[Any] = ..., changes: Optional[Any] = ...): ...
    def inspect_image(self, image: Any): ...
    def inspect_distribution(self, image: Any, auth_config: Optional[Any] = ...): ...
    def load_image(self, data: Any, quiet: Optional[Any] = ...): ...
    def prune_images(self, filters: Optional[Any] = ...): ...
    def pull(self, repository: Any, tag: Optional[Any] = ..., stream: bool = ..., auth_config: Optional[Any] = ..., decode: bool = ..., platform: Optional[Any] = ...): ...
    def push(self, repository: Any, tag: Optional[Any] = ..., stream: bool = ..., auth_config: Optional[Any] = ..., decode: bool = ...): ...
    def remove_image(self, image: Any, force: bool = ..., noprune: bool = ...): ...
    def search(self, term: Any): ...
    def tag(self, image: Any, repository: Any, tag: Optional[Any] = ..., force: bool = ...): ...

def is_file(src: Any): ...
