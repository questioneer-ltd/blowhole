# Stubs for docker.types.containers (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..utils.utils import convert_port_bindings, convert_tmpfs_mounts, convert_volume_binds, format_environment, format_extra_hosts, normalize_links, parse_bytes, parse_devices, split_command, version_gte, version_lt
from .base import DictType
from .healthcheck import Healthcheck
from typing import Any, Optional

class LogConfigTypesEnum:
    JSON: Any = ...
    SYSLOG: Any = ...
    JOURNALD: Any = ...
    GELF: Any = ...
    FLUENTD: Any = ...
    NONE: Any = ...

class LogConfig(DictType):
    types: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    @property
    def type(self): ...
    @type.setter
    def type(self, value: Any) -> None: ...
    @property
    def config(self): ...
    def set_config_value(self, key: Any, value: Any) -> None: ...
    def unset_config(self, key: Any) -> None: ...

class Ulimit(DictType):
    def __init__(self, **kwargs: Any) -> None: ...
    @property
    def name(self): ...
    @name.setter
    def name(self, value: Any) -> None: ...
    @property
    def soft(self): ...
    @soft.setter
    def soft(self, value: Any) -> None: ...
    @property
    def hard(self): ...
    @hard.setter
    def hard(self, value: Any) -> None: ...

class HostConfig(dict):
    def __init__(self, version: Any, binds: Optional[Any] = ..., port_bindings: Optional[Any] = ..., lxc_conf: Optional[Any] = ..., publish_all_ports: bool = ..., links: Optional[Any] = ..., privileged: bool = ..., dns: Optional[Any] = ..., dns_search: Optional[Any] = ..., volumes_from: Optional[Any] = ..., network_mode: Optional[Any] = ..., restart_policy: Optional[Any] = ..., cap_add: Optional[Any] = ..., cap_drop: Optional[Any] = ..., devices: Optional[Any] = ..., extra_hosts: Optional[Any] = ..., read_only: Optional[Any] = ..., pid_mode: Optional[Any] = ..., ipc_mode: Optional[Any] = ..., security_opt: Optional[Any] = ..., ulimits: Optional[Any] = ..., log_config: Optional[Any] = ..., mem_limit: Optional[Any] = ..., memswap_limit: Optional[Any] = ..., mem_reservation: Optional[Any] = ..., kernel_memory: Optional[Any] = ..., mem_swappiness: Optional[Any] = ..., cgroup_parent: Optional[Any] = ..., group_add: Optional[Any] = ..., cpu_quota: Optional[Any] = ..., cpu_period: Optional[Any] = ..., blkio_weight: Optional[Any] = ..., blkio_weight_device: Optional[Any] = ..., device_read_bps: Optional[Any] = ..., device_write_bps: Optional[Any] = ..., device_read_iops: Optional[Any] = ..., device_write_iops: Optional[Any] = ..., oom_kill_disable: bool = ..., shm_size: Optional[Any] = ..., sysctls: Optional[Any] = ..., tmpfs: Optional[Any] = ..., oom_score_adj: Optional[Any] = ..., dns_opt: Optional[Any] = ..., cpu_shares: Optional[Any] = ..., cpuset_cpus: Optional[Any] = ..., userns_mode: Optional[Any] = ..., uts_mode: Optional[Any] = ..., pids_limit: Optional[Any] = ..., isolation: Optional[Any] = ..., auto_remove: bool = ..., storage_opt: Optional[Any] = ..., init: Optional[Any] = ..., init_path: Optional[Any] = ..., volume_driver: Optional[Any] = ..., cpu_count: Optional[Any] = ..., cpu_percent: Optional[Any] = ..., nano_cpus: Optional[Any] = ..., cpuset_mems: Optional[Any] = ..., runtime: Optional[Any] = ..., mounts: Optional[Any] = ..., cpu_rt_period: Optional[Any] = ..., cpu_rt_runtime: Optional[Any] = ..., device_cgroup_rules: Optional[Any] = ...) -> None: ...

def host_config_type_error(param: Any, param_value: Any, expected: Any): ...
def host_config_version_error(param: Any, version: Any, less_than: bool = ...): ...
def host_config_value_error(param: Any, param_value: Any): ...

class ContainerConfig(dict):
    def __init__(self, version: Any, image: Any, command: Any, hostname: Optional[Any] = ..., user: Optional[Any] = ..., detach: bool = ..., stdin_open: bool = ..., tty: bool = ..., ports: Optional[Any] = ..., environment: Optional[Any] = ..., volumes: Optional[Any] = ..., network_disabled: bool = ..., entrypoint: Optional[Any] = ..., working_dir: Optional[Any] = ..., domainname: Optional[Any] = ..., host_config: Optional[Any] = ..., mac_address: Optional[Any] = ..., labels: Optional[Any] = ..., stop_signal: Optional[Any] = ..., networking_config: Optional[Any] = ..., healthcheck: Optional[Any] = ..., stop_timeout: Optional[Any] = ..., runtime: Optional[Any] = ...) -> None: ...
